"use client" import * as React from "react" import * as LabelPrimitive from "@radix-ui/react-label@2.1.2" import {\n Slot\n} from "@radix-ui/react-slot@1.1.2" import {\n Controller, FormProvider, useFormContext, useFormState, type ControllerProps, type FieldPath, type FieldValues,\n} from "react-hook-form@7.55.0" import {\n cn\n} from "./utils" import {\n Label\n} from "./label" const Form = FormProvider; type FormFieldContextValue = FieldPath, > = {\n name: TName;\n} const FormFieldContext = React.createContext({} as FormFieldContextValue, ) const FormField = = FieldPath, >({\n ...props\n}, TName>) => {\n return ( {\n const fieldContext = React.useContext(FormFieldContext) const itemContext = React.useContext(FormItemContext) const {\n getFieldState\n} = useFormContext() const formState = useFormState({\n name: fieldContext.name\n}) const fieldState = getFieldState(fieldContext.name, formState); if (!fieldContext) {\n \n throw new Error("useFormField should be used within ");\n} const {\n id\n} = itemContext;\n return {\n id, name: fieldContext.name, formItemId: `${id}-form-item`, formDescriptionId: `${id}-form-item-description`, formMessageId: `${id}-form-item-message`, ...fieldState,\n};\n}; type FormItemContextValue = {\n id;\n} const FormItemContext = React.createContext({} as FormItemContextValue, ) function FormItem({\n className, ...props\n}) {\n \n const id = React.useId();\n return ( );\n} function FormLabel({\n className, ...props\n}) {\n \n const {\n error, formItemId\n} = useFormField();\n return ( );\n} function FormControl({\n ...props\n}) {\n \n const {\n error, formItemId, formDescriptionId, formMessageId\n} = useFormField();\n return ( );\n} function FormDescription({\n className, ...props\n}) {\n \n const {\n formDescriptionId\n} = useFormField();\n return ( );\n} function FormMessage({\n className, ...props\n}) {\n \n const {\n error, formMessageId\n} = useFormField() const body = error ? String(error?.message ?? "") ) {\n \n return null;\n} return ( {body} );\n} export {\n useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField,\n}; 
